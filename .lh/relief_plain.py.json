{
    "sourceFile": "relief_plain.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1717072703346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717072784704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+import panda as pd\n"
                },
                {
                    "date": 1717072790063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-import panda as pd\n+import pandas as pd\n"
                },
                {
                    "date": 1717072797950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,2 @@\n import pandas as pd\n+imoprt numpy as np[]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072804859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,2 @@\n import pandas as pd\n-imoprt numpy as np[]\n\\ No newline at end of file\n+imprt numpy as np\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072813863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,4 @@\n import pandas as pd\n-imprt numpy as np\n\\ No newline at end of file\n+import numpy as np\n+import torch\n+\n"
                },
                {
                    "date": 1717072841468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n import pandas as pd\n import numpy as np\n import torch\n \n+d\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072847407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import pandas as pd\n import numpy as np\n import torch\n \n-d\n\\ No newline at end of file\n+df = pd.read\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072856528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import pandas as pd\n import numpy as np\n import torch\n \n-df = pd.read\n\\ No newline at end of file\n+df = pd.read_csv(\"dataset\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072862304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import pandas as pd\n import numpy as np\n import torch\n \n-df = pd.read_csv(\"dataset\")\n\\ No newline at end of file\n+df = pd.read_csv(\"dataset/xxx.csv\")\n+\n"
                },
                {
                    "date": 1717072869951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,4 +3,5 @@\n import torch\n \n df = pd.read_csv(\"dataset/xxx.csv\")\n \n+numpy_array = \n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072875486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,5 @@\n import torch\n \n df = pd.read_csv(\"dataset/xxx.csv\")\n \n-numpy_array = \n\\ No newline at end of file\n+numpy_array = df.values\n"
                },
                {
                    "date": 1717072881739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,6 @@\n \n df = pd.read_csv(\"dataset/xxx.csv\")\n \n numpy_array = df.values\n+\n+data_\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072890506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n df = pd.read_csv(\"dataset/xxx.csv\")\n \n numpy_array = df.values\n \n-data_\n\\ No newline at end of file\n+data_torch = torch.tensor()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072895932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n df = pd.read_csv(\"dataset/xxx.csv\")\n \n numpy_array = df.values\n \n-data_torch = torch.tensor()\n\\ No newline at end of file\n+data_torch = torch.tensor(numpy_array, dtype = )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072901968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n df = pd.read_csv(\"dataset/xxx.csv\")\n \n numpy_array = df.values\n \n-data_torch = torch.tensor(numpy_array, dtype = )\n\\ No newline at end of file\n+data_torch = torch.tensor(numpy_array, dtype = torch.floa)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717072907415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n df = pd.read_csv(\"dataset/xxx.csv\")\n \n numpy_array = df.values\n \n-data_torch = torch.tensor(numpy_array, dtype = torch.floa)\n\\ No newline at end of file\n+data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073021820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,6 @@\n df = pd.read_csv(\"dataset/xxx.csv\")\n \n numpy_array = df.values\n \n-data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n\\ No newline at end of file\n+data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n+\n"
                },
                {
                    "date": 1717073222519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import pandas as pd\n import numpy as np\n import torch\n \n-df = pd.read_csv(\"dataset/xxx.csv\")\n+df = pd.read_csv(\"datasetwine.csv\")\n \n numpy_array = df.values\n \n data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n"
                },
                {
                    "date": 1717073242379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n import pandas as pd\n import numpy as np\n import torch\n \n-df = pd.read_csv(\"datasetwine.csv\")\n+df = pd.read_csv(\"dataset/wine.csv\")\n \n numpy_array = df.values\n \n data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n \n+def load_data()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073249769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,5 +7,10 @@\n numpy_array = df.values\n \n data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n \n-def load_data()\n\\ No newline at end of file\n+def load_data(data_path):\n+    df = pd.read_csv(\"dataset/wine.csv\")\n+\n+numpy_array = df.values\n+\n+data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073256064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,6 @@\n data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n \n def load_data(data_path):\n     df = pd.read_csv(\"dataset/wine.csv\")\n-\n-numpy_array = df.values\n-\n-data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n\\ No newline at end of file\n+    numpy_array = df.values\n+    data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073261203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+import pandas as pd\n+import numpy as np\n+import torch\n+\n+df = pd.read_csv(\"dataset/wine.csv\")\n+\n+numpy_array = df.values\n+\n+data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n+\n+def load_data(data_path):\n+    df = pd.read_csv(\"dataset/wine.csv\")\n+    numpy_array = df.values\n+    data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n+    \n+    return da\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073270619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+import pandas as pd\n+import numpy as np\n+import torch\n+\n+df = pd.read_csv(\"dataset/wine.csv\")\n+\n+numpy_array = df.values\n+\n+data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n+\n+def load_data(data_path):\n+    df = pd.read_csv(\"data_path\")\n+    numpy_array = df.values\n+    data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n+    \n+    return data_torch\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073284187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,14 @@\n import pandas as pd\n import numpy as np\n import torch\n \n-df = pd.read_csv(\"dataset/wine.csv\")\n \n-numpy_array = df.values\n-\n-data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n-\n def load_data(data_path):\n     df = pd.read_csv(\"data_path\")\n     numpy_array = df.values\n     data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n     \n     return data_torch\n-import pandas as pd\n-import numpy as np\n-import torch\n \n-df = pd.read_csv(\"dataset/wine.csv\")\n \n-numpy_array = df.values\n-\n-data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n-\n-def load_data(data_path):\n-    df = pd.read_csv(\"dataset/wine.csv\")\n-    numpy_array = df.values\n-    data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n-    \n-    return da\n-import pandas as pd\n-import numpy as np\n-import torch\n-\n-df = pd.read_csv(\"dataset/wine.csv\")\n-\n-numpy_array = df.values\n-\n-data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n-\n-def load_data(data_path):\n-    df = pd.read_csv(\"dataset/wine.csv\")\n-    numpy_array = df.values\n-    data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n\\ No newline at end of file\n+x = load_data()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073289407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,5 +10,5 @@\n     \n     return data_torch\n \n \n-x = load_data()\n\\ No newline at end of file\n+x = load_data(\"dataset/\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717073295780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,5 +10,5 @@\n     \n     return data_torch\n \n \n-x = load_data(\"dataset/\")\n\\ No newline at end of file\n+x = load_data(\"dataset/wine.csv\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1717426160224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,60 @@\n import pandas as pd\n-import numpy as np\n import torch\n+from sklearn.preprocessing import MinMaxScaler\n+from sklearn.neighbors import NearestNeighbors\n \n-\n-def load_data(data_path):\n-    df = pd.read_csv(\"data_path\")\n-    numpy_array = df.values\n-    data_torch = torch.tensor(numpy_array, dtype = torch.float32)\n+class Relief:\n+    def __init__(self, n_neighbors=10):\n+        self.n_neighbors = n_neighbors\n\\ No newline at end of file\n     \n-    return data_torch\n+    def fit(self, X, y):\n+        self.X = X\n+        self.y = y\n+        self.weights = torch.zeros(X.shape[1])\n+        self.classes = torch.unique(y)\n+        \n+        self._compute_weights()\n+        \n+    def _compute_weights(self):\n+        scaler = MinMaxScaler()\n+        X_scaled = scaler.fit_transform(self.X)\n+        \n+        for i in range(self.X.shape[0]):\n+            Ri = X_scaled[i]\n+            yi = self.y[i]\n+            \n+            same_class_idx = (self.y == yi).nonzero().squeeze()\n+            diff_class_idx = (self.y != yi).nonzero().squeeze()\n+            \n+            nn_same_class = NearestNeighbors(n_neighbors=self.n_neighbors).fit(self.X[same_class_idx])\n+            nn_diff_class = NearestNeighbors(n_neighbors=self.n_neighbors).fit(self.X[diff_class_idx])\n+            \n+            _, idx_same_class = nn_same_class.kneighbors([Ri], self.n_neighbors, return_distance=False)\n+            _, idx_diff_class = nn_diff_class.kneighbors([Ri], self.n_neighbors, return_distance=False)\n+            \n+            hit = X_scaled[same_class_idx[idx_same_class]].mean(axis=1)\n+            miss = X_scaled[diff_class_idx[idx_diff_class]].mean(axis=1)\n+            \n+            self.weights -= torch.abs(Ri - hit).sum(axis=0) / (self.X.shape[0] * self.n_neighbors)\n+            self.weights += torch.abs(Ri - miss).sum(axis=0) / (self.X.shape[0] * self.n_neighbors)\n+        \n+    def transform(self, X):\n+        return X * self.weights\n \n+def load_data(csv_file):\n+    data = pd.read_csv(csv_file)\n+    X = torch.tensor(data.iloc[:, :-1].values, dtype=torch.float32)\n+    y = torch.tensor(data.iloc[:, -1].values, dtype=torch.float32)\n+    return X, y\n \n-x = load_data(\"dataset/wine.csv\")\n+if __name__ == \"__main__\":\n+    csv_file = 'your_dataset.csv'  # 替换为你的CSV文件路径\n+    X, y = load_data(csv_file)\n+    \n+    relief = Relief(n_neighbors=10)\n+    relief.fit(X, y)\n+    \n+    print(\"Feature Weights:\", relief.weights)\n+    \n+    X_transformed = relief.transform(X)\n+    print(\"Transformed Data:\", X_transformed)\n"
                },
                {
                    "date": 1717426248155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,14 +47,14 @@\n     y = torch.tensor(data.iloc[:, -1].values, dtype=torch.float32)\n     return X, y\n \n if __name__ == \"__main__\":\n-    csv_file = 'your_dataset.csv'  # 替换为你的CSV文件路径\n+    csv_file = 'wine.csv'  # 替换为你的CSV文件路径\n     X, y = load_data(csv_file)\n     \n     relief = Relief(n_neighbors=10)\n     relief.fit(X, y)\n     \n     print(\"Feature Weights:\", relief.weights)\n     \n     X_transformed = relief.transform(X)\n\\ No newline at end of file\n-    print(\"Transformed Data:\", X_transformed)\n+    print(\"Transformed Data:\", X_transformed)\n"
                },
                {
                    "date": 1717426281462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,14 +47,14 @@\n     y = torch.tensor(data.iloc[:, -1].values, dtype=torch.float32)\n     return X, y\n \n if __name__ == \"__main__\":\n-    csv_file = 'wine.csv'  # 替换为你的CSV文件路径\n+    csv_file = 'dataset/wine.csv'  # 替换为你的CSV文件路径\n     X, y = load_data(csv_file)\n     \n     relief = Relief(n_neighbors=10)\n     relief.fit(X, y)\n     \n     print(\"Feature Weights:\", relief.weights)\n     \n     X_transformed = relief.transform(X)\n\\ No newline at end of file\n-    print(\"Transformed Data:\", X_transformed)\n+    print(\"Transformed Data:\", X_transformed)\n"
                }
            ],
            "date": 1717072703346,
            "name": "Commit-0",
            "content": ""
        }
    ]
}